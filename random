#include<stdio.h>
#include<stdlib.h>
#define li long int

struct priq
{  long int val;
   long int pri; };
  li size=0;
  
  void minheapify(struct priq **pq1,li i)
{
	li left=2*i+1;
	li right=2*i+2;
	li smallest=i;
		if ( (*pq1)[left].pri<(*pq1)[smallest].pri && right<size )
		smallest=right;
	if ((*pq1)[left].pri<(*pq1)[i].pri && left<size)
		smallest=left;

	if (smallest!=i)
	{
                li value;li prior;
                value=((*pq1)[smallest].val);
                prior=((*pq1)[smallest].pri);
                ((*pq1)[smallest].val)=((*pq1)[i].val);
                ((*pq1)[smallest].pri)=((*pq1)[i].pri);
                ((*pq1)[i].val)=value;
                ((*pq1)[i].pri)=prior; 
		minheapify(pq1,smallest);
	}
}

void decrease_priority(struct priq **pq1,li valuee,li key)
{

   li i,val1,pri1;
   for(i=0;i<size;i++)
    if(((*pq1)[i].val)==valuee)
       break;
   if(((*pq1)[i].pri)<= key)
    { printf("ERROR\n"); }
   else
    {
       ((*pq1)[i].pri)=key;
       while(i>0 && ((*pq1)[i/2].pri)>((*pq1)[i].pri))
       {
          val1=((*pq1)[i].val);
          pri1=((*pq1)[i].pri);
          ((*pq1)[i].val)=((*pq1)[i/2].val);
          ((*pq1)[i].pri)=((*pq1)[i/2].pri);
          ((*pq1)[i/2].val)=val1;
          ((*pq1)[i/2].pri)=pri1; 
          i=i/2;
       } 
    }   
}


void print(struct priq *pq1)
{

 li i=0;
  
 for(i=0;i<size;i++)
  printf("%li %li -",(pq1[i].val),(pq1[i].pri));  
}

void get_min(struct priq* pq1)
{
  if(size==0)
   printf("EMPTY\n");
  else
   printf("%li (%li)\n",(pq1[0].val),(pq1[0].pri));
}
void extract_min(struct priq** pq1)
{
   if(size==0)
   printf("EMPTY\n");
   else
   {
      printf("%li (%li)\n",((*pq1)[0].val),((*pq1)[0].pri));
      (*pq1)[0].val=(*pq1)[size-1].val;
      (*pq1)[0].pri=(*pq1)[size-1].pri;
      size--;
      minheapify(pq1,0);
   }


}
void insert(struct priq** pq1,li v,li pr)
{
  size++;
  li i;li val2;li pri2;
  if(size==1)
   *pq1=(struct priq *)malloc(size*sizeof(struct priq));
  else 
   *pq1=(struct priq *)realloc(*pq1,sizeof(struct priq)*size);
      (*pq1)[size-1].val=v;
      (*pq1)[size-1].pri=pr;
  i=size-1;
  while(i>0 && ((*pq1)[i/2].pri)>((*pq1)[i].pri))
   {
     val2=((*pq1)[i/2].val);
     pri2=((*pq1)[i/2].pri);
     ((*pq1)[i/2].val)=((*pq1)[i].val);
     ((*pq1)[i/2].pri)=((*pq1)[i].pri);
     ((*pq1)[i].val)=val2;
     ((*pq1)[i].pri)=pri2;
     i=i/2;
   } 

}  

  
 int main(){
     char ch;li valu,prio;
     struct priq *pq1;
     while(1)
     {
         scanf("%c",&ch);
         if (ch=='s')
         break;
         switch (ch)
         { 
           case 'g':get_min(pq1); 
              break;
           case 'e':extract_min(&pq1);
              break;
           case 'd':scanf("%li %li",&valu,&prio);
              decrease_priority(&pq1,valu,prio);
              break;
           
           case 'a':scanf("%li %li",&valu,&prio);
              insert(&pq1,valu,prio);
              break;
           case 's': 
              break;
   }
}


}
        
